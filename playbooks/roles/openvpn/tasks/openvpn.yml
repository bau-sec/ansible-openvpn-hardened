---
- name: OpenVPN | sysctl | Enable IPv4 traffic forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1

- name: OpenVPN | Configuration | Copy sshd service file into place
  template:
    src: sshd.service.j2
    dest: "/lib/systemd/system/ssh.service"

- name: OpenVPN | Configuration | Copy OpenVPN server configuration files into place
  template:
    src: etc_openvpn_server.conf.j2
    dest: "{{ openvpn_path }}/{{ item.proto }}-{{ item.port }}.conf"
  with_items: "{{ openvpn_instances }}"
  notify:
    - start openvpn

# TODO make openvpn_user/group a variable referenced here and systemd (openvpn and tmpfiles conf)
#Harden - Run as unprivileged user
#         See: https://community.openvpn.net/openvpn/wiki/UnprivilegedUser
- name: OpenVPN | Users | Create openvpn group
  group:
    name: openvpn

- name: OpenVPN | Users | Create openvpn user
  user:
    name: openvpn
    group: openvpn
    shell: /usr/sbin/nologin
    home: /var/lib/openvpn

- name: OpenVPN | Directories | Set the proper permissions {{ openvpn_path }}
  file:
    path: "{{ openvpn_path }}"
    recurse: no
    state: directory
    owner: root
    group: openvpn
    mode: 0750

- name: OpenVPN | Directories | Allow openvpn user access to pki files
  file:
    path: "{{ item }}"
    recurse: no
    state: directory
    group: openvpn
    mode: g+rx
  with_items:
    - "{{ openvpn_path }}/easyrsa"
    - "{{ openvpn_path }}/easyrsa/easyrsa3"
    - "{{ openvpn_path }}/easyrsa/easyrsa3/pki"
    - "{{ openvpn_path }}/easyrsa/easyrsa3/pki/private"
    - "{{ openvpn_path }}/easyrsa/easyrsa3/pki/issued"

- name: OpenVPN | Directories | Allow openvpn user to read required PKI files
  file:
    path: "{{ item }}"
    state: file
    group: openvpn
    mode: g+r
  with_items:
    - "{{ openvpn_ca_cert }}"
    - "{{ dhparams_location }}"
    - "{{ openvpn_crl }}"

- name: OpenVPN | Directories | Allow openvpn user to read required PKI files
  file:
    path: "{{ item }}"
    state: file
    owner: openvpn
    group: openvpn
  with_items:
    - "{{ path_server_cert }}"
    - "{{ path_server_key }}"
    - "{{ openvpn_hmac_firewall }}"

- name: OpenVPN | setcap | Ensure only root and openvpn user can run 'ip' and 'openvpn'
  file:
    path: "{{ item }}"
    group: openvpn
    mode: 0750
  with_items:
    - "{{ path_bin_ip }}"
    - "/usr/sbin/openvpn"

- name: OpenVPN | setcap | Set capabilities to allow /usr/sbin/openvpn to bind to reserved (0-1024) ports
  capabilities:
    path: /usr/sbin/openvpn
    capability: '{{ item }}'
  with_items:
    - "cap_net_admin+eip"
    - "cap_net_bind_service+eip"

- name: OpenVPN | setcap | Set capabilities to allow "{{ path_bin_ip }}" perform network admin tasks
  capabilities:
    path: "{{ path_bin_ip }}"
    capability: 'cap_net_admin+eip'

- name: OpenVPN | systemd | Make override directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/etc/systemd/system/openvpn@.service.d"

- name: OpenVPN | systemd | Use override file to better sandbox OpenVPN and run as openvpn user
  template:
    src: etc_systemd_system_openvpn@.service.d_override.conf.j2
    dest: /etc/systemd/system/openvpn@.service.d/override.conf
  notify:
    - start openvpn

- name: OpenVPN | systemd | Use systemd-tmpfiles to create /run/openvpn on startup
  template:
    src: etc_tmpfiles.d_openvpn.conf
    dest: /etc/tmpfiles.d/openvpn.conf
  notify:
    - systemd tmpfiles

- name: OpenVPN | systemd | Enable services
  service:
    name: "openvpn@{{ item.proto }}-{{ item.port }}.service"
    enabled: true
  with_items: "{{ openvpn_instances }}"
  notify:
    - start openvpn
